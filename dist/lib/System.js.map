{"version":3,"file":"System.js","sourceRoot":"","sources":["../../src/lib/System.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\nimport sm from './SqueezeliteMCContext';\nimport { exec } from 'child_process';\nimport * as fs from 'fs';\nimport { PlayerConfig } from './types/Player';\n\nconst DSD_FORMAT_TO_SQUEEZELITE_OPT: Record<string, string> = {\n  'dop': 'dop',\n  'DSD_U8': 'u8',\n  'DSD_U16_LE': 'u16le',\n  'DSD_U16_BE': 'u16be',\n  'DSD_U32_LE': 'u32le',\n  'DSD_U32_BE': 'u32be'\n};\n\nconst SYSTEMD_TEMPLATE_FILE = `${path.resolve(__dirname)}/../templates/systemd/squeezelite.service.template`;\nconst SYSTEMD_SERVICE_FILE = '/etc/systemd/system/squeezelite.service';\nconst ALSA_CONF_TEMPLATE_FILE = `${path.resolve(__dirname)}/../templates/alsa/100-squeezelite.conf.template`;\nconst ALSA_CONF_FILE = '/etc/alsa/conf.d/100-squeezelite.conf';\nconst SQUEEZELITE_LOG_FILE = '/tmp/squeezelite.log';\n\nexport class SystemError extends Error {\n  code?: SystemErrorCode;\n}\n\nexport enum SystemErrorCode {\n  DeviceBusy = -1\n}\n\nfunction execCommand(cmd: string, sudo = false) {\n  return new Promise<string>((resolve, reject) => {\n    sm.getLogger().info(`[squeezelite_mc] Executing ${cmd}`);\n    exec(sudo ? `echo volumio | sudo -S ${cmd}` : cmd, { uid: 1000, gid: 1000 }, function (error, stdout, stderr) {\n      if (error) {\n        sm.getLogger().error(sm.getErrorMessage(`[squeezelite_mc] Failed to execute ${cmd}: ${stderr.toString()}`, error));\n        reject(error);\n      }\n      else {\n        resolve(stdout.toString());\n      }\n    });\n  });\n}\n\nfunction systemctl(cmd: string, service = '') {\n  const fullCmd = `/usr/bin/sudo /bin/systemctl ${cmd} ${service} || true`;\n  return execCommand(fullCmd);\n}\n\nasync function restartSqueezeliteService() {\n  const status = await getSqueezeliteServiceStatus();\n  const stopPromise = status === 'active' ? stopSqueezeliteService() : Promise.resolve();\n  await stopPromise;\n  const rmLogPromise = fs.existsSync(SQUEEZELITE_LOG_FILE) ? execCommand(`rm ${SQUEEZELITE_LOG_FILE}`, true) : Promise.resolve();\n  await rmLogPromise;\n  await systemctl('start', 'squeezelite');\n  try {\n    await resolveOnSqueezeliteServiceStatusMatch('active', 5);\n  }\n  catch (error) {\n    // Look for recognizable error in log file\n    const throwErr = new SystemError();\n    if (fs.existsSync(SQUEEZELITE_LOG_FILE)) {\n      const log = fs.readFileSync(SQUEEZELITE_LOG_FILE).toString();\n      if (log.indexOf('Device or resource busy') >= 0) {\n        throwErr.code = SystemErrorCode.DeviceBusy;\n      }\n    }\n    throw throwErr;\n  }\n}\n\nfunction resolveOnSqueezeliteServiceStatusMatch(status: string | string[], matchConsecutive = 1, retries = 5) {\n  let consecutiveCount = 0;\n  let tryCount = 0;\n\n  const startCheckTimer = (resolve: (value?: unknown) => void, reject: () => void) => {\n    setTimeout(async () => {\n      const _status = await getSqueezeliteServiceStatus();\n      if (Array.isArray(status) ? status.includes(_status) : _status === status) {\n        consecutiveCount++;\n        if (consecutiveCount === matchConsecutive) {\n          resolve();\n        }\n        else {\n          startCheckTimer(resolve, reject);\n        }\n      }\n      else if (_status === 'failed') {\n        reject();\n      }\n      else if (_status === 'activating') {\n        consecutiveCount = 0;\n        startCheckTimer(resolve, reject);\n      }\n      else if (tryCount < retries - 1) {\n        consecutiveCount = 0;\n        tryCount++;\n        startCheckTimer(resolve, reject);\n      }\n      else {\n        reject();\n      }\n    }, 500);\n  };\n\n\n  return new Promise((resolve, reject) => {\n    startCheckTimer(resolve, reject);\n  });\n}\n\nasync function updateSqueezeliteService(config: PlayerConfig) {\n  const template = fs.readFileSync(SYSTEMD_TEMPLATE_FILE).toString();\n  const dsdFormat = config.dsdFormat ? DSD_FORMAT_TO_SQUEEZELITE_OPT[config.dsdFormat] : null;\n  /* eslint-disable no-template-curly-in-string */\n  const out = template\n    .replace('${PLAYER_NAME_OPT}', config.playerName ? `-n ${config.playerName}` : '')\n    .replace('${VOLUME_CONTROL_OPT}', config.mixer ? `-V ${config.mixer}` : '')\n    .replace('${DSD_OPT}', dsdFormat ? `-D 3:${dsdFormat}` : '')\n    .replace('${LOG_FILE}', SQUEEZELITE_LOG_FILE);\n  /* eslint-enable no-template-curly-in-string */\n  fs.writeFileSync(`${SYSTEMD_TEMPLATE_FILE}.out`, out);\n  const cpCmd = `cp ${SYSTEMD_TEMPLATE_FILE}.out ${SYSTEMD_SERVICE_FILE}`;\n  await execCommand(cpCmd, true);\n  return true;\n}\n\nasync function updateAlsaConf(config: PlayerConfig) {\n  const template = fs.readFileSync(ALSA_CONF_TEMPLATE_FILE).toString();\n  // eslint-disable-next-line no-template-curly-in-string\n  const out = template.replace('${CARD}', config.card);\n  fs.writeFileSync(`${ALSA_CONF_TEMPLATE_FILE}.out`, out);\n  const cpCmd = `cp ${ALSA_CONF_TEMPLATE_FILE}.out ${ALSA_CONF_FILE}`;\n  await execCommand(cpCmd, true);\n  return true;\n}\n\nexport async function initSqueezeliteService(config: PlayerConfig) {\n  await updateAlsaConf(config);\n  await updateSqueezeliteService(config);\n  await systemctl('daemon-reload');\n  return restartSqueezeliteService();\n}\n\nexport async function stopSqueezeliteService() {\n  await systemctl('stop', 'squeezelite');\n  return resolveOnSqueezeliteServiceStatusMatch([ 'inactive', 'failed' ]);\n}\n\nexport async function getSqueezeliteServiceStatus() {\n  const recognizedStatuses = [ 'inactive', 'active', 'activating', 'failed' ];\n  const regex = /Active: (.*) \\(.*\\)/gm;\n  const out = await systemctl('status', 'squeezelite');\n  const matches = [ ...out.matchAll(regex) ];\n  if (matches[0] && matches[0][1] && recognizedStatuses.includes(matches[0][1])) {\n    return matches[0][1];\n  }\n\n  return 'inactive';\n\n}\n\nexport async function getAlsaFormats(card: string): Promise<string[]> {\n  //Const cmd = `aplay -D hw:${card} --nonblock -f MPEG /dev/zero  2>&1 | sed -e '1,/Available formats:/d' | awk -F'-' '{print $2}' | awk '{$1=$1}1'`;\n  const regExFormatsList = /Available formats:\\n(.*)/gms;\n  const regExFormats = /^- (.*)/gm;\n  const cmd = `aplay -D hw:${card} --nonblock -f MPEG /dev/zero  2>&1 || true`;\n  const output = await execCommand(cmd);\n  if (output.indexOf('Device or resource busy') >= 0) {\n    sm.getLogger().error(`[squeezelite_mc] Could not query supported ALSA formats for card ${card} because device is busy`);\n    const err = new SystemError();\n    err.code = SystemErrorCode.DeviceBusy;\n    throw err;\n  }\n  else {\n    const formatsListMatches = [ ...output.matchAll(regExFormatsList) ];\n    const formatsList = formatsListMatches[0] && formatsListMatches[0][1] ? formatsListMatches[0][1] : null;\n    if (formatsList) {\n      const formatsMatches = [ ...formatsList.matchAll(regExFormats) ];\n      const formats = formatsMatches.map((match) => (match[1] || '').trim());\n      sm.getLogger().info(`[squeezelite_mc] Card ${card} supports the following ALSA formats: ${JSON.stringify(formats)}`);\n      return formats;\n    }\n\n    sm.getLogger().warn(`[squeezelite_mc] No supported ALSA formats found for card ${card}`);\n    return [];\n\n  }\n}\n"]}